dir()
library(shiny)
runApp()
shiny::runApp()
?plot
shiny::runApp()
shiny::runApp()
shiny::runApp()
str(srain)
rain <- read.csv("annual_rainfall_by_station.csv", sep=",", strip.white=TRUE)
rain[which(gsub("^\\s+|\\s+$", "", rain$Station) == loc),]
rain[which(gsub("^\\s+|\\s+$", "", rain$Station) == "Kathmandu, Airport"),]
srain <- rain[which(gsub("^\\s+|\\s+$", "", rain$Station) == "Kathmandu, Airport"),]
srain
fit <- lm(Rainfall..mm. ~ Year, data=srain)
fit
str(srain)
shiny::runApp()
rain <- read.csv("annual_rainfall_by_station.csv", sep=",", stringsAsFactors = FALSE)
srain <- rain[which(gsub("^\\s+|\\s+$", "", rain$Station) == "Kathmandu, Airport"),]
str(srain)
cls
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
str(rain)
shiny::runApp()
rain <- read.csv("annual_rainfall_by_station.csv", sep=",")
str(rain)
?read.csv
rain <- read.csv("annual_rainfall_by_station.csv", sep=",", stringsAsFactors = FALSE, na.strings = "NA")
str(rain)
shiny::runApp()
summary(rain)
rain$Rainfall.mm. <- as.integer(as.character(rain$Rainfall..mm.))
summary(rain)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='mlamichhane',
token='E79B6BC215E3B88216EF02B6ACB2728A',
secret='a8y7X+VIoiEMKpn8txyV+q/O+TwzPSOK9nkx9ukY')
library(shinyapps)
shinyapps::deployApp("/Users/milan/coursera/developing_data_products/shiny_app")
shiny::runApp()
shiny::runApp()
shiny::runApp()
dir()
setwd("~/coursera/developing_data_products/")
dir()
library(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
dir()
author("annual_rainfall")
dir()
2. Write using R Markdown
3. Use an empty line followed by three dashes to separate slides!
--- .class #id
## Slide 2
slidify("index.Rmd")
browseURL("index.html")
